---
import Button from "./button.astro";
import Container from "./container.astro";

interface NavItems {
  href: string;
  linkName: string;
  icon: string;
}

const navItems: NavItems[] = [
  {
    href: "#home",
    linkName: "Home",
    icon: "fas fa-home",
  },
  {
    href: "#about",
    linkName: "about",
    icon: "fa fa-info-circle",
  },
  {
    href: "#services",
    linkName: "Services",
    icon: "fa fa-truck",
  },
  {
    href: "#portfolio",
    linkName: "Portfolio",
    icon: "fa fa-project-diagram",
  },
  {
    href: "#team",
    linkName: "Team",
    icon: "fas fa-home",
  },
  {
    href: "#contact",
    linkName: "Contact",
    icon: "fa fa-phone",
  },
];
---

<header
  id="header"
  class="w-full py-10 fixed z-10 transition-all ease-out duration-300"
>
  <Container>
    <div class="flex justify-between items-center">
      <h1 class="text-white text-3xl font-bold uppercase">
        <a href="#home" class="nav-link">Zelion</a>
      </h1>
      <div
        class="hidden lg:flex justify-evenly text-white items-center gap-x-8"
      >
        <a href="#home" class="uppercase text-sm font-medium nav-link">Home</a>
        <a href="#about" class="uppercase text-sm font-medium nav-link">About</a
        >
        <a href="#services" class="uppercase text-sm font-medium nav-link"
          >Services</a
        >
        <a href="#portfolio" class="uppercase text-sm font-medium nav-link"
          >Portfolio</a
        >
        <a href="#team" class="uppercase text-sm font-medium nav-link">Team</a>
        <a href="#contact" class="uppercase text-sm font-medium nav-link"
          >Contact</a
        >
        <Button className="uppercase font-semibold text-sm border-2">
          Join Us
        </Button>
      </div>
      <i
        id="menuBtn"
        class="lg:hidden fas fa-bars text-white text-2xl cursor-pointer"></i>
    </div>
  </Container>
</header>

<div
  id="sideBarMenu"
  class="fixed left-0 top-0 bottom-0 z-10 w-0 h-screen bg-primary pt-8 transition-all ease-out duration-300 overflow-hidden"
>
  <div class="flex w-full justify-between items-start mb-10">
    <h2 class="">
      <a href="#home" class="text-4xl px-5 font-semibold text-white nav-link"
        >Astro</a
      >
    </h2>
    <i
      id="sideNavCloseBtn"
      class="fa fa-arrow-left text-white text-4xl cursor-pointer"></i>
  </div>

  <ul class="w-full">
    {
      navItems.map(({ href, linkName, icon }) => {
        return (
          <li class="flex gap-x-4 px-5 py-5 hover:bg-cyan-700 hover:cursor-pointer transition ease-in-out duration-300 w-full">
            <i class={`${icon} text-white text-sm`} />
            <a
              href={href}
              class="uppercase text-base font-medium text-white w-full nav-link"
            >
              {linkName}
            </a>
          </li>
        );
      })
    }
  </ul>
</div>

<script>
  const menuBtn = document.getElementById("menuBtn");
  const sideBarMenu = document.getElementById("sideBarMenu");
  const header = document.getElementById("header");
  const sideNavCloseBtn = document.getElementById("sideNavCloseBtn");

  //store the value of this method immediately in an array
  const selectClass = (className) => [
    ...document.getElementsByClassName(className),
  ];

  // change header bg-color and padding onscroll
  window.onscroll = () => {
    if (window.scrollY >= 100) {
      header.classList.remove("py-10");
      header.classList.add("py-5", "bg-cyan-600", "shadow-xl");
    } else {
      header.classList.remove("py-5", "bg-cyan-600", "shadow-xl");
      header.classList.add("py-10");
    }
  };

  //change header bg-color and padding if scrollY is greater than 100 on page load or reload
  document.addEventListener("DOMContentLoaded", () => {
    if (window.scrollY >= 100) {
      header.classList.remove("py-10");
      header.classList.add("py-5", "bg-cyan-600");
    }
  });

  // scroll to an element below the header

  const navLinks = selectClass("nav-link");
  navLinks.forEach((link) => {
    link.addEventListener("click", (e) => {
      e.preventDefault();
      const sectionID = link.getAttribute("href").replace("#", ""); //the href attr value of each "link" is the same as the section id value by removing the # symbol
      window.scrollTo({
        top: document.getElementById(sectionID).offsetTop - header.offsetHeight,
        behavior: "smooth",
      });
    });
  });

  // sidebar menu
  let isOpen = false;
  menuBtn.addEventListener("click", function () {
    console.log("sadfshfj");
    if (!isOpen) {
      if (document.body.clientWidth >= 500) {
        sideBarMenu.classList.add("w-96", "px-6"); //show paddings when sidebar is open
        sideBarMenu.classList.remove("w-0");
        isOpen = !isOpen;
      } else {
        sideBarMenu.classList.add("w-full", "px-6"); //remove paddings when sidebar is closed
        sideBarMenu.classList.remove("w-0");
        isOpen = !isOpen;
      }
    } else {
      sideBarMenu.classList.remove("w-96", "w-full", "px-6"); //remove paddings when sidebar is closed
      sideBarMenu.classList.add("w-0");
      isOpen = !isOpen;
    }
  });

  sideNavCloseBtn.addEventListener("click", function () {
    sideBarMenu.classList.remove("w-96", "w-full", "px-6"); //remove paddings when sidebar is closed
    sideBarMenu.classList.add("w-0");
    isOpen = !isOpen;
  });
</script>
